<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Victor Chien Portfolio</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on Victor Chien Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 15 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python and R talk to each other!</title>
      <link>/blog/python-and-r-talk-to-each-other/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/python-and-r-talk-to-each-other/</guid>
      <description>We can use python to extract numbers using a regular expression.
#pythonimport reimport pandas as pdimport numpy as npstring1 = &amp;quot;Hello I&amp;#39;d like 3 dozen eggs, 10 pounds of flour, and 2 gallons of milk.&amp;quot;a = re.findall(&amp;quot;\d+&amp;quot;,string1)Supposedly we can loop this through many strings and extract a dataframe of numbers, but I was having trouble accessing my dataframe in the global environment.
Now we can reference the python variable in r and edit the dataframe in r!</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/blog/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/blog/2015-07-23-r-rmarkdown/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
  </channel>
</rss>